{"version":3,"file":"static/js/463.8f33510a.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-bottom: 50px;\n`;\n\nexport const ListItem = styled.li`\n  width: 130px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 10px;\n  background-color: #deedf8;\n  box-shadow: 1px 1px 3px 0px #deedf8;\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n  margin: 0;\n`;\n\nexport const PhoneNumber = styled.span`\n  font-size: 14px;\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 5px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  background-color: #fbcccc;\n  border: 1px solid #de2222;\n  color: #de2222;\n  outline: none;\n  transition: color 250ms linear, background-color 250ms linear;\n  :hover {\n    background-color: #de2222;\n    color: #fff;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport { getContactsNames } from 'redux/selectors';\nimport { getFilteredNames } from 'redux/filterSlice';\n\nimport {\n  List,\n  ListItem,\n  Name,\n  PhoneNumber,\n  DeleteBtn,\n} from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactsNames);\n  const queryFilter = useSelector(getFilteredNames);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(queryFilter.toLowerCase())\n  );\n\n  const handleDeleteContact = async id => {\n    await dispatch(deleteContact(id)).unwrap();\n  };\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, id, phone }) => {\n        return (\n          <ListItem key={id}>\n            <Name>\n              {name}: <PhoneNumber>{phone}</PhoneNumber>\n            </Name>\n            <DeleteBtn id={id} onClick={() => handleDeleteContact(id)}>\n              Delete\n            </DeleteBtn>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  margin-top: 10px;\n  flex-direction: column;\n  gap: 10px;\n  border: 1px solid #0070ba;\n  background-color: #ffffff;\n  border-radius: 5px;\n  padding: 15px;\n  box-shadow: 1px 1px 3px 0px #0070ba;\n`;\n\nexport const AddContactBtn = styled.button`\n  margin-top: 10px;\n  font-weight: 500;\n  font-size: 16px;\n  cursor: pointer;\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid #004d80;\n  background-color: #004d80;\n  color: #fff;\n  outline: none;\n  transition: color 250ms linear, background-color 250ms linear;\n  :hover {\n    background-color: #bbe4ff;\n    color: #004d80;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  font-size: 16px;\n  padding: 10px;\n  color: #2d2d2d;\n  border: 1px solid #8e8e8e;\n  background-color: #e8e8e8;\n  outline: none;\n  border-radius: 3px;\n  transition: box-shadow 250ms linear;\n  :focus {\n    box-shadow: 0px 0px 8px #004d80;\n  }\n  @media screen and (max-width: 468px) {\n    width: 200px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { getContactsNames } from 'redux/selectors';\nimport {\n  Form,\n  AddContactBtn,\n  FormLabel,\n  FormInput,\n} from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactsNames);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const addContacts = e => {\n    e.preventDefault();\n    const addedName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (addedName) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    const newContact = { name, phone: number };\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={addContacts}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Serhii\"\n          onChange={onChange}\n          value={name}\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"[0-9]{3}[0-9]{3}[0-9]{2}[0-9]{2}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"000 000 00 00\"\n          onChange={onChange}\n          value={number}\n          required\n        />\n      </FormLabel>\n      <AddContactBtn>Add contacts</AddContactBtn>\n    </Form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/operations';\nimport { selectLoading } from 'redux/selectors';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactsForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["List","styled","ListItem","Name","PhoneNumber","DeleteBtn","ContactsList","dispatch","useDispatch","contacts","useSelector","getContactsNames","queryFilter","getFilteredNames","useEffect","fetchContacts","filteredContacts","filter","contact","name","toLowerCase","includes","handleDeleteContact","id","deleteContact","unwrap","map","phone","onClick","Form","AddContactBtn","FormLabel","FormInput","ContactsForm","useState","setName","number","setNumber","onChange","e","target","value","onSubmit","preventDefault","some","alert","newContact","addContact","type","pattern","title","placeholder","required","Contacts","isLoading","selectLoading","Helmet"],"sourceRoot":""}