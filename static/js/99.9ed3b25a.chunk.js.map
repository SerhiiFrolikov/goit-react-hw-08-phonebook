{"version":3,"file":"static/js/99.9ed3b25a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsFilter/ContactsFilter.styled.jsx","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts.js"],"sourcesContent":["export const getContactsNames = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.loading;\n","import styled from '@emotion/styled';\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-bottom: 50px;\n`;\n\nexport const ListItem = styled.li`\n  width: 130px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 10px;\n  background-color: #deedf8;\n  box-shadow: 1px 1px 3px 0px #deedf8;\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n  margin: 0;\n`;\n\nexport const PhoneNumber = styled.span`\n  font-size: 14px;\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 5px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  background-color: #fbcccc;\n  border: 1px solid #de2222;\n  color: #de2222;\n  outline: none;\n  transition: color 250ms linear, background-color 250ms linear;\n  :hover {\n    background-color: #de2222;\n    color: #fff;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContactsNames } from 'redux/contacts/selectors';\nimport { getFilteredNames } from 'redux/filter/filterSlice';\n\nimport {\n  List,\n  ListItem,\n  Name,\n  PhoneNumber,\n  DeleteBtn,\n} from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactsNames);\n  const queryFilter = useSelector(getFilteredNames);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(queryFilter.toLowerCase())\n  );\n\n  const handleDeleteContact = async id => {\n    await dispatch(deleteContact(id)).unwrap();\n  };\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, id, number }) => {\n        return (\n          <ListItem key={id}>\n            <Name>\n              {name}: <PhoneNumber>{number}</PhoneNumber>\n            </Name>\n            <DeleteBtn id={id} onClick={() => handleDeleteContact(id)}>\n              Delete\n            </DeleteBtn>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  margin-top: 10px;\n  flex-direction: column;\n  gap: 10px;\n  border: 1px solid #0070ba;\n  background-color: #ffffff;\n  border-radius: 5px;\n  padding: 15px;\n  box-shadow: 1px 1px 3px 0px #0070ba;\n`;\n\nexport const AddContactBtn = styled.button`\n  margin-top: 10px;\n  font-weight: 500;\n  font-size: 16px;\n  cursor: pointer;\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid #004d80;\n  background-color: #004d80;\n  color: #fff;\n  outline: none;\n  transition: color 250ms linear, background-color 250ms linear;\n  :hover {\n    background-color: #bbe4ff;\n    color: #004d80;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  font-size: 16px;\n  padding: 10px;\n  color: #2d2d2d;\n  border: 1px solid #8e8e8e;\n  background-color: #e8e8e8;\n  outline: none;\n  border-radius: 3px;\n  transition: box-shadow 250ms linear;\n  :focus {\n    box-shadow: 0px 0px 8px #004d80;\n  }\n  @media screen and (max-width: 468px) {\n    width: 200px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContactsNames } from 'redux/contacts/selectors';\n\nimport {\n  Form,\n  AddContactBtn,\n  FormLabel,\n  FormInput,\n} from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactsNames);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const addContacts = e => {\n    e.preventDefault();\n    const addedName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (addedName) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    const newContact = { name, number };\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={addContacts}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Serhii\"\n          onChange={onChange}\n          value={name}\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"[0-9]{3}[0-9]{3}[0-9]{2}[0-9]{2}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"000 000 00 00\"\n          onChange={onChange}\n          value={number}\n          required\n        />\n      </FormLabel>\n      <AddContactBtn>Add contacts</AddContactBtn>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-left: 15px;\n  margin-bottom: 30px;\n  width: 330px;\n`;\n\nexport const FindLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FindInput = styled.input`\n  font-size: 16px;\n  width: 300px;\n  padding: 5px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filter, getFilteredNames } from 'redux/filter/filterSlice';\nimport { FindInput, FindLabel, Form } from './ContactsFilter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const queryFilter = useSelector(getFilteredNames);\n  return (\n    <Form>\n      <FindLabel>\n        Find contacts by name\n        <FindInput\n          type=\"text\"\n          name=\"searchName\"\n          value={queryFilter ?? ''}\n          onChange={e => dispatch(filter(e.target.value))}\n        />\n      </FindLabel>\n    </Form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/ContactsFilter/ContactsFilter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactsForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["getContactsNames","state","contacts","items","selectLoading","loading","List","styled","ListItem","Name","PhoneNumber","DeleteBtn","ContactsList","dispatch","useDispatch","useSelector","queryFilter","getFilteredNames","filteredContacts","filter","contact","name","toLowerCase","includes","handleDeleteContact","id","deleteContact","unwrap","map","number","onClick","Form","AddContactBtn","FormLabel","FormInput","ContactsForm","useState","setName","setNumber","onChange","e","target","value","onSubmit","preventDefault","some","alert","newContact","addContact","type","pattern","title","placeholder","required","FindLabel","FindInput","Filter","Contacts","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}